define character_set
define max_password_length
define target_hash

generate all permutations of character_set up to max_password_length
for each candidate_password in permutations:
    candidate_hash = calculate_md5_hash(candidate_password)
    if candidate_hash == target_hash:
        print("Cracked password:", candidate_password)
        break
else:
    print("Password not found within the given length limit")

below are the algos supported
hashlib.md5([data, ]*, usedforsecurity=True)
hashlib.sha1([data, ]*, usedforsecurity=True)
hashlib.sha224([data, ]*, usedforsecurity=True)
hashlib.sha256([data, ]*, usedforsecurity=True)
hashlib.sha384([data, ]*, usedforsecurity=True)
hashlib.sha512([data, ]*, usedforsecurity=True)Â¶
hashlib.sha3_224([data, ]*, usedforsecurity=True)
hashlib.sha3_256([data, ]*, usedforsecurity=True)
hashlib.sha3_384([data, ]*, usedforsecurity=True)
hashlib.sha3_512([data, ]*, usedforsecurity=True)